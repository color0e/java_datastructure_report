자료구조 P13개인과제 (1,2,3) 정보보호학과 11501030임장순

과제 1. 비교 정렬 알고리즘의 구현

[소스코드]
package p13_1;

import java.util.Scanner;

public class CompareSort {
	static class Selection{
		public static void sort(Comparable[] a) {
			int N = a.length;
			for(int i=0;i<N;i++) {
				int min = i;
				for(int j=i+1;j<N;j++) {
					if(isless(a[j],a[min])) min=j;
				}
				swap(a,i,min);
			}
		}
		private static boolean isless(Comparable i,Comparable j) {
			return (i.compareTo(j)<0);
		}
		private static void swap(Comparable a[],int i,int j) {
			Comparable temp = a[i]; a[i]=a[j]; a[j]=temp;
		}
	}
	static class BubbleSort{
		public static void sort(Comparable a[]) {
			int size=a.length,i,j,temp;
			for(i=size-1;i>0;i--)
				for(j=0;j<i;j++) if(isless(a[i],a[j])) swap(a,i,j);
		}
		private static boolean isless(Comparable i,Comparable j) {
			return (i.compareTo(j)>0);
		}
		private static void swap(Comparable a[],int i,int j) {
			Comparable temp = a[i]; a[i]=a[j]; a[j]=temp;
		}
	}
	static class Insertion{
		public static void sort(Comparable[] a) {
			int N = a.length;
			for(int i=1;i<N;i++) {
				for(int j=i;j>0;j--) {
					if(isless(a[j],a[j-1])) {
						swap(a,j,j-1);
					}
					else break;
				}
			}
		}
		private static boolean isless(Comparable i,Comparable j) {
			return (i.compareTo(j)<0);
		}
		private static void swap(Comparable a[],int i,int j) {
			Comparable temp = a[i]; a[i]=a[j]; a[j]=temp;
		}
	}
	static class Shell{
		public static void sort(Comparable[] a) {
			int N = a.length;
			int h=4;
			while(h>=1) {
				for(int i=h;i<N;i++) {
					for(int j=i;j>=h && isless(a[j],a[j-h]);j-=h) {
						swap(a,j,j-h);						
					}
				}
				h /=3;
			}
		}
		private static boolean isless(Comparable i,Comparable j) {
			return (i.compareTo(j)>0);
		}
		private static void swap(Comparable a[],int i,int j) {
			Comparable temp = a[i]; a[i]=a[j]; a[j]=temp;
		}
	}
	static class Heap{
		public static void sort(Comparable[] a) {
			int heapSize = a.length-1;
			for(int i=heapSize/2 ; i>0 ;i--)
				downheap(a,i,heapSize);
			while(heapSize >1) {
				swap(a,1,heapSize--);
				downheap(a,1,heapSize);
			}
		}
		private static void downheap(Comparable[] a,int p,int heapSize) {
			while(2*p <=heapSize) {
				int s=2*p;
				if(s<heapSize && isless(a[s],a[s+1])) s++;
				if(!isless(a[p],a[s])) break;
				swap(a,p,s);
				p=s;
			}
		}
		private static boolean isless(Comparable i,Comparable j) {
			return (i.compareTo(j)<0);
		}
		private static void swap(Comparable a[],int i,int j) {
			Comparable temp = a[i]; a[i]=a[j]; a[j]=temp;
		}
	}
	public static void main(String[] args) {
		Integer[] nums;
		Integer[] nums2;
		Scanner sc = new Scanner(System.in);
		System.out.println("정렬할 정수를 한 라인에 연속하여 입력하세요(숫자의 구분은 스페이스)");
		String[] strs = sc.nextLine().split(" ");
		nums = new Integer[strs.length];
		nums2 = new Integer[strs.length+1];
		for(int i=0;i<strs.length;i++) {
			nums[i]=Integer.parseInt(strs[i]);
			nums2[i+1]=Integer.parseInt(strs[i]);
		}
		Selection.sort(nums);
		for(Integer num: nums) {
		System.out.print("["+num+"]");
		}
		System.out.println();
		System.out.println("선택정렬:오름 차순 정렬입니다.");
		BubbleSort.sort(nums);
		for(Integer num: nums) {
			System.out.print("["+num+"]");
			}
		System.out.println();
		System.out.println("버블정렬:내림 차순 정렬입니다.");
		Insertion.sort(nums);
		for(Integer num: nums) {
			System.out.print("["+num+"]");
			}
		System.out.println();
		System.out.println("삽입정렬:오름 차순 정렬입니다.");
		Shell.sort(nums);
		for(Integer num: nums) {
			System.out.print("["+num+"]");
			}
		System.out.println();
		System.out.println("쉘정렬:내림 차순 정렬입니다.");
		Heap.sort(nums2);
		for(Integer num: nums2) {
			if(num==null) {
				continue;
			}
			System.out.print("["+num+"]");
			}
		System.out.println();
		System.out.println("힙정렬:오름 차순 정렬입니다.");
	}
}
[콘솔창 결과]
정렬할 정수를 한 라인에 연속하여 입력하세요(숫자의 구분은 스페이스)
65 95 90 80 55 70 35 50 10 25 40 30
[10][25][30][35][40][50][55][65][70][80][90][95]
선택정렬:오름 차순 정렬입니다.
[95][90][80][70][65][55][50][40][35][30][25][10]
버블정렬:내림 차순 정렬입니다.
[10][25][30][35][40][50][55][65][70][80][90][95]
삽입정렬:오름 차순 정렬입니다.
[95][90][80][70][65][55][50][40][35][30][25][10]
쉘정렬:내림 차순 정렬입니다.
[10][25][30][35][40][50][55][65][70][80][90][95]
힙정렬:오름 차순 정렬입니다.

과제 2. JAVA 정렬 클래스의 활용(배열)

[소스코드]
package p13_2;

import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;

public class P13_2 {
	public static void main(String[] args) {
		int[] nums = {3,4,5,1,2};
		Arrays.sort(nums);
		for(int num: nums) {
		System.out.print(num+" ");
		}
		System.out.println();
		Integer[] nums2 = {3,4,5,1,2};
		Arrays.sort(nums2,new Comparator<Integer>() {

			@Override
			public int compare(Integer arg0, Integer arg1) {
				// TODO Auto-generated method stub
				if(arg0 < arg1) return 1;
				else if(arg0 > arg1) return -1;
				return 0;
			}
			
		});
		for(int num: nums2) {
			System.out.print(num+" ");
			}
			System.out.println();
	String[] strs = {"aaaaaa","a","by","b","f","eofab","disk","ceo"};
	Arrays.sort(strs);
	for(String str : strs) {
		System.out.print(str+" ");
	}
	System.out.println();
	String[] strs2 = {"a","c","f","cb","efd","edfg","aaaaaa","abc"};
	Arrays.sort(strs2,new Comparator<String>() {

		@Override
		public int compare(String o1, String o2) {
			// TODO Auto-generated method stub
			if(o1.length() > o2.length()) return 1;
			else if(o1.length() < o2.length()) return -1;
			return 0;
		}
		
	});
	for(String str : strs2) {
		System.out.print(str+" ");
	}
	System.out.println();
    String[] strs3 = {"b","ab","a","c","aa","abc","aaaaaa","aaaaa","aaaaac","aaaaab"};
    Arrays.sort(strs3,new Comparator<String>() {

		@Override
		public int compare(String o1, String o2) {
			// TODO Auto-generated method stub
			if(o1.length() > o2.length()) return 1;
			else if(o1.length() < o2.length()) return -1;
			else {
				if(o1.compareTo(o2)>0) return 1;
				else if(o1.compareTo(o2)<0) return -1;				
			}
			return 0;
		}
		
	});
    for(String str : strs3) {
		System.out.print(str+" ");
	}
	System.out.println();
 }
}

[콘솔창 결과]
1 2 3 4 5 
5 4 3 2 1 
a aaaaaa b by ceo disk eofab f 
a c f cb efd abc edfg aaaaaa 
a b c aa ab abc aaaaa aaaaaa aaaaab aaaaac 

과제 3. JAVA 정렬 클래스의 활용(종합)

[소스코드]
package P13_3;

import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

public class P13_3 {
	static class human implements Comparable<human>{
		int age;
		String name;
		human(int age,String name){
			this.age=age;
			this.name=name;
		}
		@Override
		public int compareTo(human arg0) {
			// TODO Auto-generated method stub
			if(this.age < arg0.age) {
				return 1;
			}else if(this.age > arg0.age) {
				return -1;
			}
			return 0;
		}
	}
	static class Nhuman implements Comparable<Nhuman>{
		int age;
		String name;
		Nhuman(int age,String name){
			this.age=age;
			this.name=name;
		}
		@Override
		public int compareTo(Nhuman arg0) {
			// TODO Auto-generated method stub
			if(name.compareTo(arg0.name)>0) {
				return 1;
			}else if(name.compareTo(arg0.name)<0) {
				return -1;
			}
			return 0;
		}
	}
	static class Bhuman implements Comparable<Bhuman>{
		int age;
		String name;
		Bhuman(int age,String name){
			this.age=age;
			this.name=name;
		}
		@Override
		public int compareTo(Bhuman arg0) {
			// TODO Auto-generated method stub
			if(this.age > arg0.age) {
				return 1;
			}else if(this.age < arg0.age) {
				return -1;
			}else {
				if(name.compareTo(arg0.name)>0) {
					return 1;
				}else if(name.compareTo(arg0.name)<0) {
					return -1;
				}
			}
			return 0;
		}
	}
	public static void main(String[] args) {
		human[] humans = {new human(26,"송골매"),new human(16,"아이유"),new human(30,"조용필")
				,new human(30,"이미자"),new human(26,"비틀즈")};
		for(human h : humans) {
			System.out.print(h.name+" "+h.age+" ");
		}
		System.out.println("<== 초기 입력 객체배열 원소");
		Arrays.sort(humans);
		for(human h : humans) {
			System.out.print(h.name+" "+h.age+" ");
		}
		System.out.println("<== 객체배열을 나이 내림차순으로 정렬한 결과");
		List<human> hli = new LinkedList<>();
		for(human h : humans) {
			hli.add(h);
		}
		Iterator<human> iter = hli.iterator();
		while(iter.hasNext()) {
			human h = iter.next();
			System.out.print(h.name+" "+h.age+" ");
		}
		System.out.println("<== 객체배열의 원소들을 나이를 키로 하는 연결리스트로 옮긴결과");
		Collections.sort(hli, new Comparator<human>(){

			@Override
			public int compare(human arg0, human arg1) {
				// TODO Auto-generated method stub
				if(arg0.compareTo(arg1)<0) {
					return 1;
				}else if(arg0.compareTo(arg1)>0) {
					return -1;
				}
				return 0;
			}
			
		});
		for(human h : hli) {
			System.out.print(h.name+" "+h.age+" ");
		}
		System.out.println("<== 연결리스트의 원소들을 나이 오름차순으로 정렬한 결과");
		List<Nhuman> nhli = new LinkedList<>();
		for(human h : humans) {
			nhli.add(new Nhuman(h.age,h.name));
		}
		for(Nhuman nhuman : nhli) {
			System.out.print(nhuman.name+" "+nhuman.age+" ");
		}
		System.out.println("<== 객체배열의 원소들을 이름을 키로하는 연결리스트에 옮긴 결과");
		Collections.sort(nhli);
		for(Nhuman nhuman : nhli) {
			System.out.print(nhuman.name+" "+nhuman.age+" ");
		}
		System.out.println("<== 연결리스트의 원소들을 이름 가나다순으로 정렬한 결과");
		List<Bhuman> bhli = new LinkedList<>();
		for(human h : humans) {
			bhli.add(new Bhuman(h.age,h.name));
		}
		for(Bhuman bhuman : bhli) {
			System.out.print(bhuman.name+" "+bhuman.age+" ");
		}
		System.out.println("<== 객체배열의 원소들을 나이와 이름을 복합 키로 하는 연결리스트에 옮긴 결과");
		Collections.sort(bhli);
		for(Bhuman bhuman : bhli) {
			System.out.print(bhuman.name+" "+bhuman.age+" ");
		}
		System.out.println("<== 연결리스트의 원소들을 나이 오름차순 이름 가나다순으로 정렬한 결과");
	}
}

[콘솔창 결과]
송골매 26 아이유 16 조용필 30 이미자 30 비틀즈 26 <== 초기 입력 객체배열 원소
조용필 30 이미자 30 송골매 26 비틀즈 26 아이유 16 <== 객체배열을 나이 내림차순으로 정렬한 결과
조용필 30 이미자 30 송골매 26 비틀즈 26 아이유 16 <== 객체배열의 원소들을 나이를 키로 하는 연결리스트로 옮긴결과
아이유 16 송골매 26 비틀즈 26 조용필 30 이미자 30 <== 연결리스트의 원소들을 나이 오름차순으로 정렬한 결과
조용필 30 이미자 30 송골매 26 비틀즈 26 아이유 16 <== 객체배열의 원소들을 이름을 키로하는 연결리스트에 옮긴 결과
비틀즈 26 송골매 26 아이유 16 이미자 30 조용필 30 <== 연결리스트의 원소들을 이름 가나다순으로 정렬한 결과
조용필 30 이미자 30 송골매 26 비틀즈 26 아이유 16 <== 객체배열의 원소들을 나이와 이름을 복합 키로 하는 연결리스트에 옮긴 결과
아이유 16 비틀즈 26 송골매 26 이미자 30 조용필 30 <== 연결리스트의 원소들을 나이 오름차순 이름 가나다순으로 정렬한 결과
